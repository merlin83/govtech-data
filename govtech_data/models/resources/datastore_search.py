# generated by datamodel-codegen:
#   filename:  datastore_search.json
#   timestamp: 2023-04-14T09:27:05+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Extra, Field


class FieldModel(BaseModel):
    class Config:
        extra = Extra.allow

    type: Optional[str] = None
    id: Optional[str] = None


class Record(BaseModel):
    class Config:
        extra = Extra.allow

    town: Optional[str] = None
    flat_type: Optional[str] = None
    flat_model: Optional[str] = None
    floor_area_sqm: Optional[str] = None
    street_name: Optional[str] = None
    resale_price: Optional[str] = None
    month: Optional[str] = None
    remaining_lease: Optional[str] = None
    lease_commence_date: Optional[str] = None
    storey_range: Optional[str] = None
    field_id: Optional[int] = Field(None, alias='_id')
    block: Optional[str] = None


class FieldLinks(BaseModel):
    class Config:
        extra = Extra.allow

    start: Optional[str] = None
    next: Optional[str] = None


class Result(BaseModel):
    class Config:
        extra = Extra.allow

    resource_id: Optional[str] = None
    fields: Optional[List[FieldModel]] = None
    records: Optional[List[Record]] = None
    field_links: Optional[FieldLinks] = Field(None, alias='_links')
    total: Optional[int] = None


class DatastoreSearchModel(BaseModel):
    class Config:
        extra = Extra.allow

    help: Optional[str] = None
    success: Optional[bool] = None
    result: Optional[Result] = None
